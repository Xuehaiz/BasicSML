use "hw1.sml";

(* 1 *)
is_older((1,2,3),(2,3,4)) = true;
is_older((5, 2, 2020), (3, 4, 2011)) = false;
is_older((2, 3, 2010), (3, 8, 2020)) = true;

(* 2 *)
number_in_month([(5, 2, 2020),(3, 4, 2011)], 2) = 1;
number_in_month([(2, 3, 2010),(3, 8, 2020)], 8) = 1;
number_in_month([(28, 2, 2020),(28, 1, 2019)], 12) = 0;

(* 3 *)
number_in_months([(28, 2, 2012),(1, 12, 2013),(31, 3, 2011),(27, 4, 2011)],[2, 3, 4]) = 3;
number_in_months([(28, 2, 2012),(1, 12, 2013),(31, 3, 2011),(27 ,4, 2011)],[2, 3]) = 2;
number_in_months([(28, 2, 2012),(1, 12, 2013),(31, 3, 2011),(27, 4, 2011)],[2]) = 1;
number_in_months([(28, 2, 2012),(1, 12, 2013),(31, 3, 2011),(27, 4, 2011)],[]) = 0;

(* 4 *)
dates_in_month([(28, 2, 2012),(1, 12, 2013)], 2) = [(28, 2, 2012)];

(* 5 *)
dates_in_months([(28, 2, 2012),(1, 12, 2013),(31, 3, 2011),(27, 4, 2011)],[2,3,4]) = [(28, 2, 2012), (31, 3, 2011), (27, 4, 2011)];

(* 6 *)
get_nth(["hi", "there", "how", "are", "you"], 2) = "there";

(* 7 *)
date_to_string((1, 6, 2013)) = "June-1-2013";

(* 8 *)
number_before_reaching_sum(10, [1,2,3,4,5]) = 3;

(* 9 *)
what_month(70) = 3;

(* 10 *)
month_range(31, 34) = [1, 2];

(* 11 *)
oldest([(28, 2, 2012),(1, 12, 2013),(31, 3, 2011),(27, 4, 2011)]) = SOME (31, 3, 2011);

(* 12 *)
cumulative_sum([1, 2, 3, 4, 5]) = [1, 3, 6, 10, 15];